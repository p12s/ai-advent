{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/count-tokens": {
            "post": {
                "description": "Counts the number of tokens in text for the specified OpenAI model",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Count tokens in text",
                "parameters": [
                    {
                        "description": "Token counting request (for JSON)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal.TokenRequest"
                        }
                    },
                    {
                        "type": "file",
                        "description": "File with text for analysis",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "OpenAI model (default: gpt-4)",
                        "name": "model",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns service status information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Service health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal.HealthResponse": {
            "description": "Service health response",
            "type": "object",
            "properties": {
                "service": {
                    "description": "@Description Service name\n@example \"tiktoken-server\"",
                    "type": "string",
                    "example": "tiktoken-server"
                },
                "status": {
                    "description": "@Description Service status\n@example \"ok\"",
                    "type": "string",
                    "example": "ok"
                },
                "version": {
                    "description": "@Description Service version\n@example \"1.0.0\"",
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "internal.TokenData": {
            "description": "Detailed token counting information",
            "type": "object",
            "properties": {
                "file_name": {
                    "description": "@Description File name (if file was uploaded)\n@example \"document.txt\"",
                    "type": "string",
                    "example": "document.txt"
                },
                "model": {
                    "description": "@Description Used model\n@example \"gpt-4\"",
                    "type": "string",
                    "example": "gpt-4"
                },
                "text_length": {
                    "description": "@Description Text length in characters\n@example 28",
                    "type": "integer",
                    "example": 28
                },
                "token_count": {
                    "description": "@Description Number of tokens in text\n@example 7",
                    "type": "integer",
                    "example": 7
                }
            }
        },
        "internal.TokenRequest": {
            "description": "Token counting request",
            "type": "object",
            "properties": {
                "model": {
                    "description": "@Description OpenAI model for token counting\n@example \"gpt-4\"",
                    "type": "string",
                    "example": "gpt-4"
                },
                "text": {
                    "description": "@Description Text for token counting\n@example \"Hello, world! This is a test message.\"",
                    "type": "string",
                    "example": "Hello, world! This is a test message."
                }
            }
        },
        "internal.TokenResponse": {
            "description": "Token counting response",
            "type": "object",
            "properties": {
                "data": {
                    "description": "@Description Response data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/internal.TokenData"
                        }
                    ]
                },
                "success": {
                    "description": "@Description Request success status\n@example true",
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}