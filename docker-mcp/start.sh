#!/bin/bash

echo "üê≥ Docker MCP Server Setup"
echo "=========================="

if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+"
    exit 1
fi

NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node -v)"
    exit 1
fi

echo "‚úÖ Node.js –≤–µ—Ä—Å–∏—è: $(node -v)"

if ! command -v npm &> /dev/null; then
    echo "‚ùå npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

echo "‚úÖ npm –≤–µ—Ä—Å–∏—è: $(npm -v)"

if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker"
    exit 1
fi

echo "‚úÖ Docker –≤–µ—Ä—Å–∏—è: $(docker --version)"

if ! docker info &> /dev/null; then
    echo "‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker"
    exit 1
fi

echo "‚úÖ Docker daemon –∑–∞–ø—É—â–µ–Ω"

echo ""
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ ! -d "node_modules" ]; then
    npm install
else
    npm install
fi

check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null ; then
        echo "‚ùå –ü–æ—Ä—Ç $port —É–∂–µ –∑–∞–Ω—è—Ç"
        return 1
    fi
    return 0
}

if ! check_port 3003; then
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç 3003 –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –≤ mcp-docker-server.js"
    exit 1
fi

if ! check_port 3004; then
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç 3004 –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –≤ mcp-http-server.js"
    exit 1
fi

echo "‚úÖ –ü–æ—Ä—Ç—ã 3003 –∏ 3004 —Å–≤–æ–±–æ–¥–Ω—ã"

if [ ! -f "config.json" ]; then
    echo ""
    echo "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    cp config.example.json config.json
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.json"
fi


echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤..."


echo "–ó–∞–ø—É—Å–∫ Docker MCP —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 3003..."
node mcp-docker-server.js &
DOCKER_MCP_PID=$!


sleep 2


if ! curl -s http://localhost:3003/mcp/docker/health > /dev/null; then
    echo "‚ùå Docker MCP —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    kill $DOCKER_MCP_PID 2>/dev/null
    exit 1
fi

echo "‚úÖ Docker MCP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $DOCKER_MCP_PID)"


echo "–ó–∞–ø—É—Å–∫ HTTP –ø—Ä–æ–∫—Å–∏ –Ω–∞ –ø–æ—Ä—Ç—É 3004..."
node mcp-http-server.js &
PROXY_PID=$!


sleep 2


if ! curl -s http://localhost:3004/health > /dev/null; then
    echo "‚ùå HTTP –ø—Ä–æ–∫—Å–∏ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    kill $DOCKER_MCP_PID $PROXY_PID 2>/dev/null
    exit 1
fi

echo "‚úÖ HTTP –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—É—â–µ–Ω (PID: $PROXY_PID)"


echo $DOCKER_MCP_PID > .docker-mcp.pid
echo $PROXY_PID > .proxy.pid

echo ""
echo "üéâ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö:"
echo "   Docker MCP Server: http://localhost:3003"
echo "   HTTP Proxy:        http://localhost:3004"
echo ""
echo "üîó –û—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:"
echo "   Health Check:      http://localhost:3003/mcp/docker/health"
echo "   Containers:        http://localhost:3003/mcp/docker/containers"
echo "   Images:            http://localhost:3003/mcp/docker/images"
echo "   System Info:       http://localhost:3003/mcp/docker/system/info"
echo ""
echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤:"
echo "   npm test"
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤:"
echo "   kill \$(cat .docker-mcp.pid) \$(cat .proxy.pid)"
echo "   –∏–ª–∏"
echo "   pkill -f 'mcp-docker-server.js'"
echo "   pkill -f 'mcp-http-server.js'"
echo ""


trap 'echo ""; echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤..."; kill $DOCKER_MCP_PID $PROXY_PID 2>/dev/null; rm -f .docker-mcp.pid .proxy.pid; echo "‚úÖ –°–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; exit 0' INT TERM


echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤..."
wait
