const fetch = require('node-fetch');
const YCloudDeploy = require('./ycloud-deploy');

async function testIntegration() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ test-agent-mcp —Å ycloud-mcp...\n');

    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        const config = require('./config.json');
        console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        console.log(`üì° YCloud URL: ${config.ycloud?.url || 'http://localhost:3004'}`);

        // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä YCloudDeploy
        const ycloudDeploy = new YCloudDeploy(config);
        console.log('‚úÖ YCloudDeploy –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

        // –¢–µ—Å—Ç–æ–≤—ã–π HTML –∫–æ–Ω—Ç–µ–Ω—Ç
        const testHtmlContent = `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f0f0f0; }
        .container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; }
        .success { color: green; }
        .timestamp { color: #666; font-size: 14px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéâ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–µ–Ω!</h1>
        <p class="success">HTML —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç —á–µ—Ä–µ–∑ ycloud-mcp</p>
        <p class="timestamp">–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ: ${new Date().toISOString()}</p>
        <p>–≠—Ç–æ—Ç —Ñ–∞–π–ª –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É test-agent-mcp –∏ ycloud-mcp.</p>
    </div>
</body>
</html>`;

        const testId = 'integration-test-' + Date.now();
        console.log(`üÜî Test ID: ${testId}`);

        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ–ø–ª–æ–π
        console.log('\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–ø–ª–æ—è –Ω–∞ Yandex Cloud...');
        const filename = `integration-test-${Date.now()}.html`;
        const result = await ycloudDeploy.deployTestResults(testHtmlContent, testId, filename);

        if (result.success) {
            console.log('\n‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
            console.log(`üì± URL –æ—Ç—á–µ—Ç–∞: ${result.url}`);
            console.log(`üåê Public IP: ${result.publicIP}`);
            console.log(`üìÑ –§–∞–π–ª: ${result.filename}`);
            
            console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
            console.log(`   ${result.url}`);
            
            return {
                success: true,
                url: result.url,
                message: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
            };
        } else {
            console.log('\n‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
            console.log(`   ${result.error}`);
            
            return {
                success: false,
                error: result.error,
                message: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'
            };
        }

    } catch (error) {
        console.error('\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error.message);
        return {
            success: false,
            error: error.message,
            message: '–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        };
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    testIntegration().then(result => {
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', result);
        process.exit(result.success ? 0 : 1);
    });
}

module.exports = { testIntegration };
